#   print(numSectors)
#   tic()
#   # Only draw points if they are visible on plot, if there are 200 or more sections, don't
#   if (numSectors <= 250) {
#     # This is the fast version. If we have more than 600 tasks, it will take around 5 seconds for a single plot. Let's use
#     # that as a starting point.
#     if (taskCount > 600) {
#       groupingFactor <- ceiling(taskCount/600)
#       print(paste("Grouping Factor:",groupingFactor))
#       groupingWindow <- 0
#       beginTime <- connections$TEND[1]
#       endTime <- beginTime
#       beginDIP <- connections$DIP[1]
#       sector <- (connectionMapping %>% filter(DIP==beginDIP))$sector[1]
#       #circos.points(x=beginTime, y=connections$PacketCount[1], sector.index=1, col = "#7B3294", pch = 20)
#       rpc <- connections$RPacketCount[1]
#       if (rpc != 0) {
#         seenTeal <- TRUE
#         #circos.points(x=beginTime, y=rpc, sector.index=sector, col = "#7B3294", pch = 20)
#       } else {
#         seenTeal <- FALSE
#       }
#       groupingWindow <- groupingWindow+1
#       for (j in 2:nrow(connections)) {
#         currentDIP <- connections$DIP[j]
#         if (groupingWindow == groupingFactor || currentDIP != beginDIP || j == nrow(connections)) {
#           timeSpan <- c(beginTime, endTime)
#           if (seenTeal) {
#             circos.link(sector, timeSpan, 1, timeSpan, col = "#5AB4AC")
#             circos.points(x=endTime, y=connections$RPacketCount[j], sector.index=sector, col = "#7B3294", pch = 20)
#             circos.points(x=endTime, y=connections$PacketCount[j], sector.index=1, col = "#7B3294", pch = 20)
#           } else {
#             circos.link(sector, timeSpan, 1, timeSpan, col = "#D8B365")
#             circos.points(x=endTime, y=rpc <- connections$PacketCount[j], sector.index=1, col = "#7B3294", pch = 20)
#           }
#           beginTime <- connections$TEND[j]
#           endTime <- beginTime
#           sector <- (connectionMapping %>% filter(DIP==currentDIP))$sector[1]
#           #circos.points(x=beginTime, y=connections$PacketCount[j], sector.index=1, col = "#7B3294", pch = 20)
#           rpc <- connections$RPacketCount[j]
#           if (rpc != 0) {
#             seenTeal <- TRUE
#             #circos.points(x=beginTime, y=rpc, sector.index=sector, col = "#7B3294", pch = 20)
#           } else {
#             seenTeal <- FALSE
#           }
#           groupingWindow <- 1
#         } else {
#           endTime <- connections$TEND[j]
#           #circos.points(x=endTime, y=connections$PacketCount[j], sector.index=1, col = "#7B3294", pch = 20)
#           rpc <- connections$RPacketCount[j]
#           if (rpc != 0) {
#             seenTeal <- TRUE
#             #circos.points(x=endTime, y=rpc, sector.index=sector, col = "#7B3294", pch = 20)
#           } else {
#             seenTeal <- FALSE
#           }
#         }
#       }
#     } else {
#       for (j in 1:nrow(connections)) {
#         #currentFactor <- dataTableMapping[.(connections$DIP[j]), nomatch = 0L]$sector[1]
#         currentFactor <- (connectionMapping %>% filter(DIP==connections$DIP[j]))$sector[1]
#         circos.points(x = connections$TEND[j], y = connections$PacketCount[j], sector.index = 1, col = "#7B3294", pch = 20)
#         if (connections$RPacketCount[j] != 0) {
#           circos.points(x = connections$TEND[j], y = connections$RPacketCount[j], sector.index = currentFactor, col = "#7B3294", pch = 20)
#           circos.link(currentFactor, connections$TEND[j], 1, connections$TEND[j], col = "#5AB4AC")
#         } else {
#           circos.link(currentFactor, connections$TEND[j], 1, connections$TEND[j], col = "#D8B365")
#         }
#       }
#     }
#   } else {
#     connectionsRows <- nrow(connections)
#     lastColor <- FALSE
#     beginningSector <- (connectionMapping %>% filter(DIP==connections$DIP[1]))$sector[1]-1
#     lastSector <- beginningSector
#     tempSector <- -1
#     j <- 1
#     firstIteration <- TRUE
#     while (j <= connectionsRows) {
#       seenTeal <- FALSE
#       for (k in j:connectionsRows) {
#         #tic()
#         #tempSector <- dataTableMapping[dip]$sector[1]-1
#         tempSector <- (connectionMapping %>% filter(DIP==connections$DIP[k]))$sector[1]-1
#         #tempSector <- dataTableMapping[.(connections$DIP[k]), nomatch = 0L]$sector[1]-1
#         #tempSector <- dataTableMapping[.(dataTableConnections$DIP[k]), nomatch = 0L]$sector[1]-1
#         #tempSector <- dataTableMapping[.(dataTableConnections[k,DIP]), nomatch = 0L]$sector[1]-1
#         #toc()
#         if (tempSector == lastSector) {
#           if (connections$RPacketCount[k] != 0) {
#             seenTeal <- TRUE
#           }
#         } else {
#           j <- k
#           break
#         }
#         if (k == connectionsRows) {
#           j <- connectionsRows
#         }
#       }
#       
#       if (firstIteration) {
#         lastColor <- seenTeal
#         firstIteration <- FALSE
#       }
#       
#       if (j != connectionsRows) {
#         if (lastColor == seenTeal) {
#           lastSector <- tempSector
#           next
#         } else {
#           if (lastColor) {
#             #show("drawing teal")
#             circos.link(2, c(beginningSector, lastSector), 1, 0, col = "#5AB4AC")
#             #show(c(beginningSector, lastSector))
#             beginningSector <- tempSector
#             lastSector <- tempSector
#             lastColor <- seenTeal
#           } else {
#             #show("drawing amber")
#             circos.link(2, c(beginningSector, lastSector), 1, 0, col = "#D8B365")
#             #show(c(beginningSector, lastSector))
#             beginningSector <- tempSector
#             lastSector <- tempSector
#             lastColor <- seenTeal
#           }
#         }
#       } else { # we are at the end of the dataframe
#         if (lastColor == seenTeal) {
#           if (lastColor) {
#             circos.link(2, c(beginningSector, tempSector), 1, 0, col = "#5AB4AC")
#           } else {
#             circos.link(2, c(beginningSector, tempSector), 1, 0, col = "#D8B365")
#           }
#         } else {
#           if (lastColor) {
#             circos.link(2, c(beginningSector, lastSector), 1, 0, col = "#5AB4AC")
#           } else {
#             circos.link(2, c(beginningSector, lastSector), 1, 0, col = "#D8B365")
#           }
#           if (seenTeal) {
#             circos.link(2, c(lastSector, tempSector), 1, 0, col = "#5AB4AC")
#           } else {
#             circos.link(2, c(lastSector, tempSector), 1, 0, col = "#D8B365")
#           }
#         }
#         break
#       }
#     }
#   }